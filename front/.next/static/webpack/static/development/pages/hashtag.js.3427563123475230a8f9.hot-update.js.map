{"version":3,"file":"static/webpack/static\\development\\pages\\hashtag.js.3427563123475230a8f9.hot-update.js","sources":["webpack:///./components/PostCard.js","webpack:///./pages/hashtag.js"],"sourcesContent":["import React, { useState, useCallback, useEffect  } from 'react';\r\nimport { Card, Icon, Button, Avatar, Input, Form,List,Comment} from 'antd';\r\nimport Link  from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [commentText,setCommentText] = useState('');\r\n    const { me } = useSelector( state => state.user);\r\n    const { commentAdded, isAddingComment } = useSelector(state => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened(prev => !prev);\r\n    }, []);\r\n\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (!me) {\r\n          return alert('로그인이 필요합니다.');\r\n        }\r\n        return dispatch({\r\n          type: ADD_COMMENT_REQUEST,\r\n          data: {\r\n            postId: post.id,\r\n          },\r\n        });\r\n      }, [me && me.id]);\r\n    \r\n      useEffect(() => {\r\n        setCommentText('');\r\n      }, [commentAdded === true]);\r\n    \r\n      const onChangeCommentText = useCallback((e) => {\r\n        setCommentText(e.target.value);\r\n      }, []);\r\n\r\n    return (\r\n        <div>\r\n        <Card\r\n            key={+post.createdAt}\r\n            cover={post.img && <img alt=\"example\" src={post.img}/>}\r\n            actions={[\r\n                <Icon type=\"retweet\" key=\"retweet\"/>,\r\n                <Icon type=\"heart\" key=\"heart\"/>,\r\n                <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\r\n                <Icon type=\"ellipsis\" key=\"ellipsis\"/>,\r\n            ]}\r\n            extra ={<Button>팔로우</Button>}\r\n        >\r\n            <Card.Meta\r\n                avatar= {<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title= {post.User.nickname}\r\n                description={post.content}\r\n            />\r\n        </Card>\r\n        {commentFormOpened && (\r\n            <>\r\n            <Form onSubmit={onSubmitComment}>\r\n                <Form.Item>\r\n                    <Input.TextArea rows={4} value={commentText} onChange={ onChangeCommentText}/>\r\n                </Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={isAddingComment}>댓글</Button>\r\n            </Form>\r\n            <List header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={post.Comments || []}\r\n                  renderItem = {item => (\r\n                      <li>\r\n                          <Comment\r\n                                author={item.User.nickname}\r\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                content = {item.content}\r\n                                \r\n                          />\r\n                      </li>\r\n                  )}\r\n            />\r\n            </>\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        img: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    })\r\n}\r\n\r\nexport default PostCard;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Hashtag = ({tag}) => {\r\n    console.log(tag);\r\n    const dispatch =useDispatch();\r\n    const { mainPosts } = useSelector(state => state.post);\r\n\r\n    useEffect( () => {\r\n        dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            data: tag,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n          {mainPosts.map(c => (\r\n            <PostCard key={+c.createdAt} post={c} />\r\n          ))}\r\n        </div>\r\n      );\r\n};\r\n\r\nHashtag.propTypes = {\r\n    tag : PropTypes.number.isRequired,\r\n}\r\n\r\n// next에서 제공, 서버로 부터 동적인 데이터를 가져올 수 있다. 가장 최초의 작업\r\nHashtag.getInitialProps = async (context) => {\r\n    console.log('hashtag getInitialProps', context.query.tag);\r\n    return { tag: context.query.tag };\r\n  };\r\n\r\nexport default Hashtag;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AADA;AAIA;AAAA;AAJA;AAAA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AATA;AAYA;AACA;AACA;AAHA;AAQA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAFA;AAHA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAGA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AACA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.e18e242684f8fc642fa7.hot-update.js","sources":["webpack:///./components/UserProfile.js","webpack:///./reducers/user.js"],"sourcesContent":["import { Card, Avatar, Button } from \"antd\";\r\nimport React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutRequestAction } from \"../reducers/user\";\r\n\r\n\r\nconst UserProfile = () => {\r\n    const { user } = useSelector(state => state.user);\r\n// useCallback -> 자식 컴포넌트에 props로 전달하기 때문에\r\n    const dispatch =useDispatch();\r\n    const onLogout = useCallback(() => {\r\n        dispatch({\r\n            type: LOG_OUT_REQUEST\r\n        });\r\n    }, []);\r\n    return (\r\n        <Card\r\n            actions= {[\r\n                <div key=\"twit\">트위터 <br/>{user.Post.length}</div>,\r\n                <div key=\"following\">팔로잉 <br/>{user.Followings.length}</div>,\r\n                <div key=\"follower\">팔로워 <br/>{user.Followers.length}</div>,\r\n            ]}>\r\n            <Card.Meta\r\n                avatar= {<Avatar>{user.nickname[0]}</Avatar>}\r\n                title= {user.nickname}\r\n            />\r\n            <Button onClick={onLogout}>로그아웃</Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","\r\nconst dummyUser = {\r\n    nickname: '이창현',\r\n    Post: [],\r\n    Followers: [],\r\n    Followings: [],\r\n};\r\n\r\n// store  중앙통제실..\r\nexport const intialState = {\r\n    isLoggedIn: false,  // 로그인 여부\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 에러 사유\r\n    signedUp : false, // 회원가입 성공\r\n    isSigninUp : false, // 회원가입 시도중\r\n    signUpErrorReason : '', // 회원가입 실패 사유\r\n    me: null, // 내 정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [], // 팔로워 리스트\r\n    userInfo : null, // 남의 정보\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\n// export const loginRequestAction = {\r\n//     type: LOG_IN_REQUEST,\r\n//     data: {\r\n//         nickname: '이창현'\r\n//     },\r\n    \r\n// };\r\n\r\n// export const logoutRequestAction = {\r\n//     type: LOG_OUT_REQUEST,\r\n// }\r\n// Action에 넣을 데이터가 동적인 경우에는 action을 함수로 만든다.\r\n// export const signUpRequestAction = (data) => {\r\n//     return {\r\n//     type: SIGN_UP_REQUEST,\r\n//     data, \r\n//     }\r\n// }\r\n\r\nconst reducer = (state= intialState, action) => {\r\n    switch (action.type){\r\n        case LOG_IN_REQUEST: {  //로그인 성공시\r\n            return {\r\n                ...state,\r\n                isLoggingIn:true,\r\n                logInErrorReason: '',\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn:false,\r\n                isLoggedIn:true,\r\n                me:dummyUser,\r\n                isLoading: false\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn:false,\r\n                isLoggedIn:false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                me: null,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST : {\r\n            return {\r\n                ...state,\r\n                signData: action.data\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AA3CA;AA8CA;AACA;AACA;;;;A","sourceRoot":""}
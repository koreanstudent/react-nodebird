{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.aa7044e82440a7db2886.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport { Form,Input, Checkbox, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport {  SIGN_UP_REQUEST } from '../reducers/user';\r\n\r\n// 커스텀 훅\r\n// export -> 모듈처럼 사용하면 다른곳에서도 사용가능\r\nexport const useInput = (initValue =null) => {\r\n    const [value,setter] =useState(initValue);\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value);\r\n    },[]);\r\n    return [value, handler];\r\n};\r\n\r\n\r\nconst Signup = () => {\r\n    const [passwordCheck, setPasswordCheck] =useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] =useState(false);\r\n    \r\n\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick,onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    // const onChangeId =(e) => {\r\n    //     setId(e.target.value);\r\n    // };\r\n    // const onChangeNick = (e) => {\r\n    //     setNick(e.target.value);\r\n    // };\r\n    // const onChangePassword = (e) => {\r\n    //     setPassword(e.target.value);\r\n    // };\r\n    const { isSigninUp } = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        if (!term){\r\n            return setTermError(true);\r\n        }\r\n        // 리덕스로 전달 -> 서버로 보내 실제 가입 할 수 있다.\r\n        dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                id,\r\n                password,\r\n                nick\r\n            }\r\n        })\r\n    },[password,passwordCheck,term]);\r\n    \r\n\r\n    const onChangePasswordChk = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    },[password]);\r\n    \r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    },[]);\r\n\r\n\r\n    return( \r\n        <>\r\n            <Form onSubmit={onSubmit} style={{padding:10}}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br/>\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\"   type=\"password\" value={password} required onChange={onChangePassword}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                    <br/>\r\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordChk}/>\r\n                    {passwordError && <div style ={{color: 'red'}}> 비밀번호가 일치하지 않습니다. </div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" value={term}  onChange={onChangeTerm}>동의합니다</Checkbox>\r\n                    {termError && <div style ={{color: 'red'}}> 약관에 동의 하셔야합니다. </div>}\r\n                </div>\r\n                <div style={{marginTop: 10}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loadng={isSigninUp}>가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAmBA;AAAA;AAnBA;AACA;AAmBA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}
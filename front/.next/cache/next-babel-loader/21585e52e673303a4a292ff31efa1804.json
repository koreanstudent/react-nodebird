{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  return __jsx(\"div\", null, \"hashtag\", tag);\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.number.isRequired\n}; // next에서 제공, 서버로 부터 동적인 데이터를 가져올 수 있다. 가장 최초의 작업\n\nHashtag.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('hashtag getInitialProps', context.query.tag);\n          return _context.abrupt(\"return\", {\n            tag: context.query.tag\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["C:/Users/chang/Desktop/web/react-nodebird/react-nodebird/front/pages/hashtag.js"],"names":["React","PropTypes","Hashtag","tag","propTypes","number","isRequired","getInitialProps","context","console","log","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;AACvB,SACI,8BAAaA,GAAb,CADJ;AAGH,CAJD;;AAMAD,OAAO,CAACE,SAAR,GAAoB;AAChBD,EAAAA,GAAG,EAAGF,SAAS,CAACI,MAAV,CAAiBC;AADP,CAApB,C,CAIA;;AACAJ,OAAO,CAACK,eAAR,GAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAcR,GAArD;AADsB,2CAEf;AAAEA,YAAAA,GAAG,EAAEK,OAAO,CAACG,KAAR,CAAcR;AAArB,WAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAKA,eAAeD,OAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Hashtag = ({tag}) => {\r\n    return (\r\n        <div>hashtag{tag}</div>\r\n    )\r\n};\r\n\r\nHashtag.propTypes = {\r\n    tag : PropTypes.number.isRequired,\r\n}\r\n\r\n// next에서 제공, 서버로 부터 동적인 데이터를 가져올 수 있다. 가장 최초의 작업\r\nHashtag.getInitialProps = async (context) => {\r\n    console.log('hashtag getInitialProps', context.query.tag);\r\n    return { tag: context.query.tag };\r\n  };\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}
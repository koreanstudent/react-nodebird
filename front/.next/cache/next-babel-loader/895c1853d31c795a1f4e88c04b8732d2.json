{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chang\\\\Desktop\\\\web\\\\react-nodebird\\\\react-nodebird\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    imagePaths,\n    isAddingPost,\n    postAdded\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n  const onSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text.trim()\n      }\n    });\n  }, [text]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\uD2B8\\uC704\\uD130\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, imagePaths.map(v => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/chang/Desktop/web/react-nodebird/react-nodebird/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Button","Input","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","imagePaths","isAddingPost","postAdded","state","post","onSubmitForm","e","preventDefault","trim","alert","type","data","content","onChangeText","target","value","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Form, Button, Input} from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../reducers/post';\r\n\r\n\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState('');\r\n    const {imagePaths, isAddingPost, postAdded} = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        setText('');\r\n    }, [postAdded === true]);\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(!text || !text.trim()){\r\n            return alert('게시글을 작성하세요.');\r\n        }\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                content: text.trim(),\r\n            }\r\n        })\r\n\r\n    }, [text]);\r\n\r\n    const onChangeText = useCallback( (e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\r\n                <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText}/>\r\n                <div>\r\n                    <Input type =\"file\" multiple hidden />\r\n                    <Button>이미지 업로드</Button>\r\n                    <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>트위터</Button>\r\n                </div>\r\n                <div>\r\n                    {imagePaths.map((v) => {\r\n                        return(\r\n                            <div key ={v} style={{display: 'inline-block'}}>\r\n                                <img src={'http://localhost:3065'+v} style={{width:'200px'}} alt= {v} />\r\n                                <div>\r\n                                    <Button>제거</Button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}
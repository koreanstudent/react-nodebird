{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n  return axios.post('/api/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/chang/Desktop/web/react-nodebird/react-nodebird/front/sagas/post.js"],"names":["all","fork","takeLatest","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","axios","addPostAPI","postData","post","withCredentials","addPost","type","e","error","watchAddPost","addCommentAPI","addComment","action","data","postId","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,EAAyGC,mBAAzG,QAAoI,kBAApI;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA6B;AACzB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,QAAxB,EAAkC;AACrCE,IAAAA,eAAe,EAAE;AADoB,GAAlC,CAAP;AAGH;;AAED,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEX;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAOY,CAAP,EAAS;AACP,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEV,gBADA;AAENY,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUE,YAAV,GAAyB;AACrB,QAAMlB,UAAU,CAACG,gBAAD,EAAkBW,OAAlB,CAAhB;AACH;;AAGD,SAASK,aAAT,GAAwB,CAEvB;;AAED,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AACzB,MAAI;AACA,UAAMnB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAER,mBADA;AAENe,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADlB;AAFA,KAAD,CAAT;AAMH,GARD,CAQE,OAAOP,CAAP,EAAS;AACP,UAAMf,GAAG,CAAC;AACNc,MAAAA,IAAI,EAAEP,mBADA;AAENS,MAAAA,KAAK,EAAED;AAFD,KAAD,CAAT;AAIH;AACJ;;AAGD,UAAUQ,eAAV,GAA4B;AACxB,QAAMxB,UAAU,CAACM,mBAAD,EAAqBc,UAArB,CAAhB;AACH;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAM3B,GAAG,CAAE,CACPC,IAAI,CAACmB,YAAD,CADG,EAEPnB,IAAI,CAACyB,eAAD,CAFG,CAAF,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(postData){\r\n    return axios.post('/api/post', postData, {\r\n        withCredentials: true\r\n    })\r\n}\r\n\r\nfunction* addPost() {\r\n    try {\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS\r\n        });\r\n    } catch (e){\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\n\r\nfunction addCommentAPI(){\r\n\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId,\r\n            }\r\n        });\r\n    } catch (e){\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all ([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
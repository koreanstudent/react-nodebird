{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\n\nconst Hashtag = ({\n  tag\n}) => {\n  console.log(tag);\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: tag\n    });\n  }, []);\n  return __jsx(\"div\", null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.number.isRequired\n}; // next에서 제공, 서버로 부터 동적인 데이터를 가져올 수 있다. 가장 최초의 작업\n\nHashtag.getInitialProps = async context => {\n  console.log('hashtag getInitialProps', context.query.tag);\n  return {\n    tag: context.query.tag\n  };\n};\n\nexport default Hashtag;","map":{"version":3,"sources":["C:/Users/chang/Desktop/web/react-nodebird/react-nodebird/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","Hashtag","tag","console","log","dispatch","mainPosts","state","post","type","data","map","c","createdAt","propTypes","number","isRequired","getInitialProps","context","query"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAMG,QAAQ,GAAEP,WAAW,EAA3B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AAEAZ,EAAAA,SAAS,CAAE,MAAM;AACbS,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,0BADD;AAELU,MAAAA,IAAI,EAAER;AAFD,KAAD,CAAR;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,SACI,mBACGI,SAAS,CAACK,GAAV,CAAcC,CAAC,IACd,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED;AAAnC,IADD,CADH,CADJ;AAOH,CAnBD;;AAqBAX,OAAO,CAACa,SAAR,GAAoB;AAChBZ,EAAAA,GAAG,EAAGL,SAAS,CAACkB,MAAV,CAAiBC;AADP,CAApB,C,CAIA;;AACAf,OAAO,CAACgB,eAAR,GAA0B,MAAOC,OAAP,IAAmB;AACzCf,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCc,OAAO,CAACC,KAAR,CAAcjB,GAArD;AACA,SAAO;AAAEA,IAAAA,GAAG,EAAEgB,OAAO,CAACC,KAAR,CAAcjB;AAArB,GAAP;AACD,CAHH;;AAKA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Hashtag = ({tag}) => {\r\n    console.log(tag);\r\n    const dispatch =useDispatch();\r\n    const { mainPosts } = useSelector(state => state.post);\r\n    \r\n    useEffect( () => {\r\n        dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            data: tag,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n          {mainPosts.map(c => (\r\n            <PostCard key={+c.createdAt} post={c} />\r\n          ))}\r\n        </div>\r\n      );\r\n};\r\n\r\nHashtag.propTypes = {\r\n    tag : PropTypes.number.isRequired,\r\n}\r\n\r\n// next에서 제공, 서버로 부터 동적인 데이터를 가져올 수 있다. 가장 최초의 작업\r\nHashtag.getInitialProps = async (context) => {\r\n    console.log('hashtag getInitialProps', context.query.tag);\r\n    return { tag: context.query.tag };\r\n  };\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}
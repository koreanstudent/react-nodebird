{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chang\\\\Desktop\\\\web\\\\react-nodebird\\\\react-nodebird\\\\front\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport withRedux from 'next-redux-wrapper';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'; // 레이아웃\n// store는 state, action, reducer가 합쳐진 것\n// withRedux()(NodeBird); -> 기존 컴퍼넌트를 확장시키는 것\n// withRedux -> props로 store 컴포넌트를 가져온다 next.js\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store;\n  return __jsx(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"NodeBird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), __jsx(AppLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n}; // node -> renderd : numbers, string, elements or an array .. \n\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType,\n  store: PropTypes.object\n};\nexport default withRedux(function (initialState, options) {\n  var store = createStore(reducer, initialState); // 여기에다가 store 커스터마이징\n\n  return store;\n})(NodeBird);","map":{"version":3,"sources":["C:/Users/chang/Desktop/web/react-nodebird/react-nodebird/front/pages/_app.js"],"names":["React","Head","PropTypes","AppLayout","reducer","withRedux","Provider","createStore","NodeBird","Component","store","propTypes","elementType","object","initialState","options"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,SAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAGA;AACA;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACvC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAM,IAAA,GAAG,EAAE,YAAX;AAAwB,IAAA,IAAI,EAAE,6DAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH,CAZD,C,CAcA;;;AACAF,QAAQ,CAACG,SAAT,GAAqB;AACjBF,EAAAA,SAAS,EAAEP,SAAS,CAACU,WADJ;AAEjBF,EAAAA,KAAK,EAAER,SAAS,CAACW;AAFA,CAArB;AAKA,eAAeR,SAAS,CAAC,UAACS,YAAD,EAAeC,OAAf,EAA0B;AAC/C,MAAML,KAAK,GAAEH,WAAW,CAACH,OAAD,EAAUU,YAAV,CAAxB,CAD+C,CAE/C;;AACA,SAAOJ,KAAP;AACD,CAJqB,CAAT,CAIVF,QAJU,CAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../components/AppLayout';\r\nimport reducer from '../reducers';\r\nimport withRedux from'next-redux-wrapper';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\n\r\n// 레이아웃\r\n// store는 state, action, reducer가 합쳐진 것\r\n// withRedux()(NodeBird); -> 기존 컴퍼넌트를 확장시키는 것\r\n// withRedux -> props로 store 컴포넌트를 가져온다 next.js\r\n\r\nconst NodeBird = ({ Component, store }) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Head>\r\n            <title>NodeBird</title>\r\n            <link rel =\"stylesheet\" href= \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\"/>\r\n            </Head>\r\n            <AppLayout>\r\n                <Component/>\r\n            </AppLayout>\r\n        </Provider>\r\n    )\r\n};\r\n\r\n// node -> renderd : numbers, string, elements or an array .. \r\nNodeBird.propTypes = {\r\n    Component: PropTypes.elementType,\r\n    store: PropTypes.object,\r\n};\r\n\r\nexport default withRedux((initialState, options)=> {\r\n    const store =createStore(reducer, initialState);\r\n    // 여기에다가 store 커스터마이징\r\n    return store;\r\n  })(NodeBird);"]},"metadata":{},"sourceType":"module"}
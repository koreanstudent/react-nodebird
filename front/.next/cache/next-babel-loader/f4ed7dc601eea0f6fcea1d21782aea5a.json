{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst dummyUser = {\n  nickname: '이창현',\n  Post: [],\n  Followers: [],\n  Followings: []\n}; // store  중앙통제실..\n\nexport const intialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 에러 사유\n  signedUp: false,\n  // 회원가입 성공\n  isSigninUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME'; // export const loginRequestAction = {\n//     type: LOG_IN_REQUEST,\n//     data: {\n//         nickname: '이창현'\n//     },\n// };\n// export const logoutRequestAction = {\n//     type: LOG_OUT_REQUEST,\n// }\n// Action에 넣을 데이터가 동적인 경우에는 action을 함수로 만든다.\n// export const signUpRequestAction = (data) => {\n//     return {\n//     type: SIGN_UP_REQUEST,\n//     data, \n//     }\n// }\n\nconst reducer = (state = intialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        //로그인 성공시\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/chang/Desktop/web/react-nodebird/react-nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followers","Followings","intialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","signedUp","isSigninUp","signUpErrorReason","me","followingList","followerList","userInfo","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOW_REQUEST","LOAD_FOLLOW_SUCCESS","LOAD_FOLLOW_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","reducer","state","action","type","isLoading","error","isSigningUp","isSignedUp"],"mappings":"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","sourcesContent":["\r\nconst dummyUser = {\r\n    nickname: '이창현',\r\n    Post: [],\r\n    Followers: [],\r\n    Followings: [],\r\n};\r\n\r\n// store  중앙통제실..\r\nexport const intialState = {\r\n    isLoggedIn: false,  // 로그인 여부\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 에러 사유\r\n    signedUp : false, // 회원가입 성공\r\n    isSigninUp : false, // 회원가입 시도중\r\n    signUpErrorReason : '', // 회원가입 실패 사유\r\n    me: null, // 내 정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [], // 팔로워 리스트\r\n    userInfo : null, // 남의 정보\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_FOLLOW_REQUEST = 'LOAD_FOLLOW_REQUEST';\r\nexport const LOAD_FOLLOW_SUCCESS = 'LOAD_FOLLOW_SUCCESS';\r\nexport const LOAD_FOLLOW_FAILURE = 'LOAD_FOLLOW_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\n// export const loginRequestAction = {\r\n//     type: LOG_IN_REQUEST,\r\n//     data: {\r\n//         nickname: '이창현'\r\n//     },\r\n    \r\n// };\r\n\r\n// export const logoutRequestAction = {\r\n//     type: LOG_OUT_REQUEST,\r\n// }\r\n// Action에 넣을 데이터가 동적인 경우에는 action을 함수로 만든다.\r\n// export const signUpRequestAction = (data) => {\r\n//     return {\r\n//     type: SIGN_UP_REQUEST,\r\n//     data, \r\n//     }\r\n// }\r\n\r\nconst reducer = (state= intialState, action) => {\r\n    switch (action.type){\r\n        case LOG_IN_REQUEST: {  //로그인 성공시\r\n            return {\r\n                ...state,\r\n                isLoggingIn:true,\r\n                logInErrorReason: '',\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn:false,\r\n                isLoggedIn:true,\r\n                me:dummyUser,\r\n                isLoading: false\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn:false,\r\n                isLoggedIn:false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                me: null,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: true,\r\n              isSignedUp: false,\r\n              signUpErrorReason: '',\r\n            };\r\n          }\r\n          case SIGN_UP_SUCCESS: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: false,\r\n              isSignedUp: true,\r\n            };\r\n          }\r\n          case SIGN_UP_FAILURE: {\r\n            return {\r\n              ...state,\r\n              isSigningUp: false,\r\n              signUpErrorReason: action.error,\r\n            };\r\n          }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}